/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package AppPackage;

import java.sql.DriverManager;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;

import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;

import javax.mail.*;
import javax.mail.internet.*;
import java.util.*;

/**
 *
 * @author JD
 */
public class HospitalGUI extends javax.swing.JFrame {

    /**
     * Creates new form HospitalGUI
     */
    public HospitalGUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jDialog1 = new javax.swing.JDialog();
        resetPrompt = new javax.swing.JLabel();
        resetNo = new javax.swing.JButton();
        resetYes = new javax.swing.JButton();
        resetCancel = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        lastName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        firstName = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        dept = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        sampleId = new javax.swing.JTextField();
        signOut = new javax.swing.JRadioButton();
        returnSample = new javax.swing.JRadioButton();
        reset = new javax.swing.JButton();
        submit = new javax.swing.JButton();
        jCheckBox1 = new javax.swing.JCheckBox();
        jLabel8 = new javax.swing.JLabel();
        emailAddress = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();

        jDialog1.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        resetPrompt.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        resetPrompt.setText("Are You Sure You Want to Clear All Fields?");
        jDialog1.getContentPane().add(resetPrompt, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 50, -1, -1));

        resetNo.setText("No");
        resetNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetNoActionPerformed(evt);
            }
        });
        jDialog1.getContentPane().add(resetNo, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 130, 60, -1));

        resetYes.setText("Yes");
        jDialog1.getContentPane().add(resetYes, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, 60, -1));

        resetCancel.setText("Cancel");
        jDialog1.getContentPane().add(resetCancel, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 130, -1, -1));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Sample Tracker v1.0");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("Please fill in your information below and scan your sample");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 360, 40));

        jLabel2.setText("Sample ID:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 190, 80, 20));

        lastName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lastNameActionPerformed(evt);
            }
        });
        getContentPane().add(lastName, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 100, 230, -1));

        jLabel3.setText("First Name:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, 90, 20));

        jLabel4.setText("Last Name:");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, 90, 20));

        firstName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                firstNameActionPerformed(evt);
            }
        });
        getContentPane().add(firstName, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 70, 230, -1));

        jLabel5.setText("Department:");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, 100, 20));

        dept.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deptActionPerformed(evt);
            }
        });
        getContentPane().add(dept, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 130, 230, -1));

        jLabel6.setText("Please select the one that applies:");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 230, 220, 20));

        sampleId.setEditable(false);
        sampleId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sampleIdActionPerformed(evt);
            }
        });
        getContentPane().add(sampleId, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 190, 230, -1));

        buttonGroup1.add(signOut);
        signOut.setText("Sign out sample");
        signOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                signOutActionPerformed(evt);
            }
        });
        getContentPane().add(signOut, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 230, 140, 20));

        buttonGroup1.add(returnSample);
        returnSample.setText("Return sample");
        getContentPane().add(returnSample, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 230, -1, 20));

        reset.setText("Reset");
        reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetActionPerformed(evt);
            }
        });
        getContentPane().add(reset, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 280, 70, -1));

        submit.setText("Submit");
        submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitActionPerformed(evt);
            }
        });
        getContentPane().add(submit, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 280, -1, -1));

        jCheckBox1.setText("Check to enter manually");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });
        getContentPane().add(jCheckBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 190, -1, 20));

        jLabel8.setText("Email:");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 160, -1, -1));

        emailAddress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailAddressActionPerformed(evt);
            }
        });
        getContentPane().add(emailAddress, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 160, 230, -1));

        jLabel7.setText("User ID:");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, -1, -1));

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        getContentPane().add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 40, 230, -1));

        setSize(new java.awt.Dimension(545, 355));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void lastNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lastNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lastNameActionPerformed

    private void firstNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_firstNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_firstNameActionPerformed

    private void deptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deptActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_deptActionPerformed

    private void sampleIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sampleIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sampleIdActionPerformed

    private void resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetActionPerformed
        jTextField1.setText("");
        firstName.setText("");
        lastName.setText("");
        sampleId.setText("");        
        dept.setText("");
        emailAddress.setText("");
        buttonGroup1.clearSelection();
    }//GEN-LAST:event_resetActionPerformed

    private void signOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_signOutActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_signOutActionPerformed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        if (sampleId.isEditable()) {
            sampleId.setEditable(false);
            sampleId.setText("");
        }
        else {
            sampleId.setEditable(true);
        }        
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void submitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitActionPerformed
        // TODO add your handling code here:
       
        String userID = jTextField1.getText();
        // userID validation
        String samplepattern = "[^a-zA-Z0-9]";
        Pattern r = Pattern.compile(samplepattern);
        Matcher m = r.matcher(userID);
        if (m.find()) {
            JOptionPane.showMessageDialog(null, "Please enter alphanumeric characters only");
        }
        
        String first = firstName.getText();
        //first name validation
        String samplePatternName = "[^a-ZA-Z]";
        Pattern regex = Pattern.compile(samplePatternName);
        Matcher regexMatch = regex.matcher(first);
        if (regexMatch.find()) {
            JOptionPane.showMessageDialog(null, "Please enter upper case or lower case haracters only");
        }
        
        String last = lastName.getText();
        //last name validation
        String samplePatternNameLast = "[^a-ZA-Z]";
        Pattern regex1 = Pattern.compile(samplePatternNameLast);
        Matcher regexMatch1 = regex1.matcher(first);
        if (regexMatch1.find()) {
            JOptionPane.showMessageDialog(null, "Please enter upper case or lower case haracters only");
        }
        
        String department = dept.getText();
        //department validation
        String samplePatternNameDept = "[^a-ZA-Z]";
        Pattern regex2 = Pattern.compile(samplePatternNameDept);
        Matcher regexMatch2 = regex2.matcher(department);
        if (regexMatch2.find()) {
            JOptionPane.showMessageDialog(null, "Please enter upper case or lower case haracters only");
        }
        
        String sample = sampleId.getText();
        //sampleID validation
        String samplepattern1 = "[^a-zA-Z0-9]";
        Pattern p = Pattern.compile(samplepattern1);
        Matcher n = p.matcher(sample);
        if (n.find()) {
            JOptionPane.showMessageDialog(null, "Please enter alphanumeric characters only");
        }

        String emailAdress = emailAddress.getText();
        try {
           InternetAddress emailAddr = new InternetAddress(emailAdress);
           emailAddr.validate();
        } 
        catch (AddressException ex) {
           System.out.println(ex);
           JOptionPane.showMessageDialog(null, "Please enter valid email address");
        }
        if (signOut.isSelected()){
            int value = 1;
            sendMail(emailAdress, "this is the subject line saying you've signed out a sample", "this is the specific message in the email");
        } else {
            int value = 0;
            sendMail(emailAdress, "this is the subject line saying you've returned the sample", "this is the specific message in the email");
        }
        
        try {
            Class.forName("com.mysql.jdbc.Driver");
	} catch (ClassNotFoundException e) {
            e.printStackTrace();
            System.out.println("Did you forget to include the JAR file in the project?");
	}
        //to establish a database connection we need several pieces of information
        String databaseURI = "jdbc:mysql://zenit.senecac.on.ca/bif724_161a12";
        
        //Declare references for the objects we're going to use:
	Connection conn = null;
	Statement stmt = null;
        
        //Instantiate the database connection
        String username = "bif724_161a12";
        String password = "erZJ5526";
	boolean connected = false;
	System.out.println("Attempting to connect to database: " + databaseURI + " with username: " + username + " password: " + password);
	try {
            conn = DriverManager.getConnection(databaseURI, username, password);
            stmt = conn.createStatement();
            connected = true;
	} catch (SQLException e) {
            e.printStackTrace();
            connected = false;
	}
	if(connected == true){
            //another example: insert a record
            System.out.println("Inserting a record into the table(s)");
            try {
                PreparedStatement pdt = conn.prepareStatement("INSERT INTO client_id(user_id, first_name, last_name, email, department) VALUES(?,?,?,?,?)");
                PreparedStatement pdt2 = conn.prepareStatement("INSERT INTO barcode_id (barcode_id) VALUES (?)");
                PreparedStatement pdt3 = conn.prepareStatement("INSERT INTO main_table (sample_out, user_id, barcode_id) VALUES (?,?,?)");
                pdt.setString(1, jTextField1.getText());
                pdt.setString(2, firstName.getText());
                pdt.setString(3, lastName.getText());
                pdt.setString(4, emailAddress.getText());
                pdt.setString(5, dept.getText());
                pdt2.setString(1, sampleId.getText());
                pdt3.setBoolean(1, signOut.isSelected());
                pdt3.setString(2, jTextField1.getText());
                pdt3.setString(3, sampleId.getText());
                
		//NOTE: we're using executeUpdate! to modify the table
		pdt.executeUpdate();
                pdt2.executeUpdate();
                pdt3.executeUpdate();
                //Dialog confirmation string
                int rowsInserted1 = pdt.executeUpdate();
                if (rowsInserted1 > 0){
                    System.out.println("Information 1 has been submitted. Email has been sent as confirmation.");
                }
                int rowsInserted2 = pdt2.executeUpdate();
                if (rowsInserted2 > 0){
                    System.out.println("Information 2 has been submitted. Email has been sent as confirmation.");
                }
                int rowsInserted3 = pdt3.executeUpdate();
                if (rowsInserted3 > 0){
                    System.out.println("Information 3 has been submitted. Email has been sent as confirmation.");
                }
                
            } catch (SQLException e) {
		e.printStackTrace();
            }
        }
        try {
            conn.close();
        } catch (SQLException ex) {
            Logger.getLogger(HospitalGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_submitActionPerformed

    private void emailAddressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emailAddressActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_emailAddressActionPerformed

    private void resetNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetNoActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_resetNoActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    /**
     * @param args the command line arguments
     */
     
    public void sendMail(String userEmail, String subject, String mesage) {    
        // Recipient's email ID needs to be mentioned.   
        String to = userEmail;
        // Sender's email ID needs to be mentioned
        String from = "web@gmail.com";  //Affia's email or what not
        // Assuming you are sending email from localhost
        String host = "localhost";    //email will be sent from local machine
        // Get system properties
        Properties properties = System.getProperties();
        // Setup mail server
        properties.setProperty("mail.smtp.host", host);
        // Get the default Session object.
        Session session = Session.getDefaultInstance(properties);

        try {
            // Create a default MimeMessage object.
            MimeMessage message = new MimeMessage(session);
            // Set From: header field of the header.
            message.setFrom(new InternetAddress(from));
            // Set To: header field of the header.
            message.addRecipient(Message.RecipientType.TO, new InternetAddress(to));
            // Set Subject: header field
            message.setSubject(subject);  
            // Now set the actual message
            message.setText(mesage);
            // Send message
            Transport.send(message);
            System.out.println("Sent message successfully");
        }
        catch (MessagingException mex) {
            mex.printStackTrace();
        }
    }     
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HospitalGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HospitalGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HospitalGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HospitalGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HospitalGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JTextField dept;
    private javax.swing.JTextField emailAddress;
    private javax.swing.JTextField firstName;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField lastName;
    private javax.swing.JButton reset;
    private javax.swing.JButton resetCancel;
    private javax.swing.JButton resetNo;
    private javax.swing.JLabel resetPrompt;
    private javax.swing.JButton resetYes;
    private javax.swing.JRadioButton returnSample;
    private javax.swing.JTextField sampleId;
    private javax.swing.JRadioButton signOut;
    private javax.swing.JButton submit;
    // End of variables declaration//GEN-END:variables
}
